#!/usr/bin/env python3
import itertools
import random
from flask import Flask, render_template, Markup


app = Flask(__name__)


def get_all_combinations_for_divisor(par_divisor):
    max_dividend = par_divisor * 10
    return [(par_divisor, num) for num in range(max_dividend + 1)]


def generate(small_number_set, exercise_count, remainder_word):
    all_combinations = [p + (p[0] * p[1],) for p in itertools.product(small_number_set, repeat=2)]
    ret = "<table cellpadding=\"10\" style=\"border-collapse: collapse;\">"
    for _ in range(exercise_count):
        exercise = random.choice(all_combinations)
        ret += "<tr><td>%2d</td> <td>x</td> <td>%2d</td> <td>=</td> <td></td> <td></td> </tr>" % (
            exercise[0],
            exercise[1]
        )

    ret += "<tr style=\"border-bottom: 1px solid black;\"><td></td> <td></td> <td></td> <td></td> <td></td> <td></td></tr>"

    for _ in range(exercise_count):
        exercise = random.choice(all_combinations)
        ret += "<tr><td>%2d</td> <td>:</td> <td>%2d</td> <td>=</td> <td></td> <td></td></tr>" % (
            exercise[2],
            exercise[1]
        )

    ret += "<tr style=\"border-bottom: 1px solid black;\"><td></td> <td></td> <td></td> <td></td> <td></td> <td></td></tr>"

    for _ in range(exercise_count):
        divisor = random.choice(small_number_set)
        exercise = random.choice(get_all_combinations_for_divisor(divisor))
        ret += "<tr><td>%2d</td> <td>:</td> <td>%2d</td> <td>=</td> <td style=\"padding: 10px 10px 10px 100px;\">%s</td> <td>=</td></tr>" % (
            exercise[1],
            exercise[0],
            remainder_word
        )
    ret += "</table>"
    return Markup(ret)


@app.route('/', methods=['GET'])
def index():
    return render_template('index.html', test_source=generate(
        (2, 3, 4, 5, 6, 7, 8, 9),
        12,
        "Zbytek po dělení"
    ))


if __name__ == '__main__':
    app.run()
